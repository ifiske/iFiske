image: node:9

deploy:
  only:
    - tags
  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Use ssh-keyscan to scan the keys of your private server. Replace gitlab.com
    ## with your own domain name. You can copy and repeat that command if you have
    ## more than one server to connect to.
    ##
    - ssh-keyscan git.ionicjs.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    ##
    ## Optionally, if you will be using any Git commands, set the user name and
    ## and email.
    ##
    - git config --global user.email "ci@kada.se"
    - git config --global user.name "KÃ¥da CI User"

    ##
    ## Install node_modules needed to build the app
    - npm install

  script:
    - npm run build

    - node scripts/sentry.js

    - git clone git@git.ionicjs.com:maistho/ifiske-app.git ionic-pro --origin=ionic

    - rm -rf ionic-pro/{www,hooks,resources}
    - cp -R www/ hooks/ resources/ ionic-pro/
    - cp -f config.xml ionic.config.json ionic-pro/
    - node scripts/copy_package_json_to_ionic_pro_folder.js

    - cd ionic-pro

    - echo *.map >> .gitignore

    - git add .
    - git commit -am "build $CI_COMMIT_TAG"
    - git push -f ionic master

    - cd ..
